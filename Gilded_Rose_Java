package com.gildedrose;

class GildedRose {
    Item[] items;

    public GildedRose(Item[] items) { this.items = items;}

    public void updateQuality() {
        for (Item item : items)
            ItemCategory category = categorize(item);
            category.updateOneItem(item);
    }

    private ItemCategory categorize(Item item) {
        if(item.name.equals("Sulfras, Hand of Ragnaros"))
            return new Legendary();
        if(item.name.equals("Aged Brie")){
            return new Cheese();
        }
        if(item.name.equals("Backstage passes to TAFKAL80ETC")){
            return new BackstagePass();
        }
        if(item.name.startsWith("Conjured")){
            return new Conjured();
        }
        return new itemCategory();
    }

    private class ItemCategory {
        private void incrementQuality(Item item) {
            if (item.quality < 50) {
               item.quality = item.quality + 1;
            }
        }

        private void decrementQuality(Item item) {
            if (item.quality > 0) {
                item.quality = item.quality - 1;
            }
        }

        private void updateExpired(Item item) {
            decrementQuality(Item item);
        }

        private void updateSellIn(Item item ) {
            item.sellIn = item.SellIn - 1;
        }

        private void updateQuality(Item item) {
            else decrementQuality(item);
        }

        private void updateOneItem(Item item) {
            updateQuality(item);
            updateSellIn(item);
            if (item.sellIn < 0) {
                updateExpired(item);
            }
        }
    }

    private class Legendary extends ItemCategory {
        protected void updateExpired(Item item){}

        protected void updateSellIn(Item item){}

        protected void updateQuality(Item item){}
    }

    private class Cheese extends ItemCategory {
        protected void updateExpired(Item item){
            incrementQuality(item);
        }

        protected void updateQuality(Item item){
            incrementQuality(item);
        }
    }

    private class BackstagePass extends ItemCategory {
        protected void updateExpired(Item item){
            item.quality = 0;
        }

        private void updateQuality(Item item){
            incrementQuality(item);

            if(item.sellIn <= 10){
                incrementQuality(item);
            }

            if(item.sellIn <= 5){
                incrementQuality(item);
            }
        }
    }

    private class Conjured extends ItemCategory {
        protected void updateExpired(Item item){
            decrementQuality(item);
            decrementQuality(item);
        }

        protected void updateQuality(Item item){
            decrementQuality(item);
            decrement(Quality(item));
        }

    }
}
